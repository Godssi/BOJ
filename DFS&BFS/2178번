from collections import deque
n, m = map(int, input().split())  # n * m의 크기

# 1은 이동할 수 있는 칸, 0은 이동할 수 없는 칸
graph = []
for i in range(n):
    graph.append(list(map(int, input())))

# 풀이 : 상, 하, 좌, 우의 리스트 값을 확인한 후에 이동한 후 그 곳의 값을 이동한 칸 수로 나타내면 된다.
# 상, 하, 좌, 우 방향 벡터 설정
dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]


def bfs(x, y):
    queue = deque()
    queue.append((x, y))

    while queue:
        x, y = queue.popleft()

        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]

            if nx < 0 or nx >= n or ny < 0 or ny >= m:
                continue

            if graph[nx][ny] == 0:
                continue

            if graph[nx][ny] == 1:
                graph[nx][ny] = graph[x][y] + 1
                queue.append((nx, ny))

    return graph[n-1][m-1]


print(bfs(0, 0))
